{"version":3,"sources":["utils/API.js","components/Navbar/index.js","utils/auth.js","components/LoginGrid/index.js","components/Carousel/index.js","pages/Login.js","components/SignupGrid/index.js","pages/Signup.js","pages/About.js","components/UserNavBar/index.js","components/RequestFormInput/index.js","pages/RequestForm.js","components/OpenRequestsModal/index.js","pages/Dashboard.js","components/RequestResults/index.js","pages/Results.js","components/PrivateRoute/index.js","pages/NoMatch.js","App.js","index.js"],"names":["API","_Method$getUser$Metho","Object","defineProperty","user_id","axios","post","id","get","request_id","delete","userInfo","NavigationBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","target","divider","React","Component","stringify","JSON","parse","defaults","headers","common","auth","getJwt","localStorage","getItem","getCurrentUser","jwt","undefined","decodedJwt","jwtDecode","console","log","setAuthHeader","token","logUserIn","then","res","data","headerToken","setItem","currentUserObject","Promise","resolve","logOutUser","removeItem","LoginGrid","handleChange","event","_event$target","name","value","login","user","window","location","handleLogIn","preventDefault","catch","err","errors","email","password","currentUser","exp","Date","now","Container","Row","Col","xs","Toast","ToastHeader","ToastBody","es_Form","FormGroup","Label","for","Input","type","placeholder","onChange","Button","outline","items","src","altText","caption","header","CarouselRS","UncontrolledCarousel","Login","Navbar_NavigationBar","Carousel","components_LoginGrid","SignUpGrid","signup","registerUser","handleSignUp","newUserSignup","firstName","lastName","neighborhood","residence","entryway","passwordTwo","verifypassword","bio","skills","photo_url","FormText","sm","offset","Signup","SignupGrid","About","UserNavBar","logOut","react_router_dom","to","RequestFormInput","handleInputChange","checked","handleSubmit","requestTitle","startDate","endDate","dust","vaccuum","temp","timers","mail","packages","yardwork","trash","moveCar","moveMC","moveMP","moveOS","playCat","feedCat","litter","feedCritter","cleanCritTank","feedFish","cleanFishTank","loading","onSubmit","check","Form","UserNavBar_UserNavBar","components_RequestFormInput","OpenRequestsModal","modal","requests","prevState","closeBtn","style","backgroundColor","borderRadius","height","buttonLabel","Modal","ModalHeader","close","request","title","ModalBody","ModalFooter","styles","backgroundImage","backgroundSize","textAlign","fontFamily","Dashboard","headerStyles","fontSize","Jumbotron","fluid","CustomInput","label","length","map","components_OpenRequestsModal","RequestResults","userRequests","Media","left","object","data-src","alt","body","heading","size","Results","RequestResults_RequestResults","PrivateRoute","_ref","component","rest","objectWithoutProperties","react_router","assign","render","pathname","from","NoMatch","role","aria-label","App","_this2","path","exact","components_PrivateRoute","pages_Login","ReactDOM","src_App_0","document","getElementById"],"mappings":"oPAWAA,GAAAC,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EAGG,SAAW,SAASG,GACnB,OAAOC,IAAMC,KAAK,IAAMF,KAJ5BF,OAAAC,EAAA,EAAAD,CAAAD,EAAA,UAOW,SAASM,GAChB,OAAOF,IAAMG,IAAI,aAAeD,KARpCL,OAAAC,EAAA,EAAAD,CAAAD,EAWG,SAAW,SAASQ,GACnB,OAAOJ,IAAMC,KAAK,wBAA0BG,KAZhDP,OAAAC,EAAA,EAAAD,CAAAD,EAAA,aAec,SAASM,GACnB,OAAOF,IAAMG,IAAI,wBAA0BD,KAhB/CL,OAAAC,EAAA,EAAAD,CAAAD,EAAA,gBAmBiB,SAASM,GACtB,OAAOF,IAAMK,OAAO,gBAAkBH,KApB1CL,OAAAC,EAAA,EAAAD,CAAAD,EAAA,aAsBc,SAASU,GACnB,OAAON,IAAMC,KAAK,kBAAmBK,KAvBzCT,OAAAC,EAAA,EAAAD,CAAAD,EAAA,eAyBgB,SAASU,GACrB,OAAON,IAAMC,KAAK,qBAAsBK,KA1B5CV,2ICIqBW,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAJ,IACjBE,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAU,GAAAO,KAAAH,KAAMH,KAEDO,OAASN,EAAKM,OAAOC,KAAZnB,OAAAoB,EAAA,EAAApB,CAAAY,IACdA,EAAKS,MAAQ,CACXC,QAAQ,GALOV,wEASjBE,KAAKS,SAAS,CACZD,QAASR,KAAKO,MAAMC,0CAItB,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,MACjCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAaC,KAAK,KAAlB,kBACAR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAeC,QAASpB,KAAKI,SAC7BM,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUb,OAAQR,KAAKO,MAAMC,OAAQc,QAAM,GACzCZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,GAC7BZ,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,UAAd,WAEFR,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChCnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,GAAzB,iBAGArB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAcC,OAAK,GACjBvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,8CAA8CiB,OAAO,SAAnE,WAEFzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,IAAIiB,OAAO,SAAzB,WAEFzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAcE,SAAO,IACrB1B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,iCArCyBG,IAAMC,sICV3CC,GADQC,KAAKC,MACDD,KAAKD,WAEvBlD,IAAMqD,SAASC,QAAQC,OAAO,+BAAiC,IAE/D,IAAMC,EAAO,CAEXC,OAFW,WAKT,OAAOC,aAAaC,QAAQ,aAiB9BC,eAtBW,WAuBT,IAAMC,EAAML,EAAKC,SAEjB,QAAYK,IAARD,EACF,OAAO,KAGT,IAAME,EAAaC,IAAUH,GAE7B,OADAI,QAAQC,IAAI,gBAAiBH,GACtBA,GAGTI,cAlCW,SAkCGC,GACRA,EACFpE,IAAMqD,SAASC,QAAQC,OAAvB,cAAiDa,SAE1CpE,IAAMqD,SAASC,QAAQC,OAAvB,eAIXc,UA1CW,SA0CD/D,GAAU,IAAAG,EAAAE,KAElB,OACEX,IACGC,KAAK,kBAAmBK,GAGxBgE,KAAK,SAAAC,GACJN,QAAQC,IAAIK,GACZ,IAAMH,EAAQG,EAAIC,KAAKJ,MACjBK,EAAcF,EAAIC,KAAKC,YAC7BR,QAAQC,IAAI,yBAA0BE,GACtCH,QAAQC,IAAIO,GAEZf,aAAagB,QAAQ,WAAYxB,EAAUkB,IAC3CH,QAAQC,IAAI,sCACZzD,EAAK0D,cAAcM,GACnBR,QAAQC,IAAI,mCAEZ,IAAMS,EAAoBlE,EAAKmD,iBAG/B,OAFAK,QAAQC,IAAI,wBAAyBS,GAE9BC,QAAQC,QAAQF,MAQ/BG,WAxEW,WA0ET,OAAOpB,aAAaqB,WAAW,cAKpBvB,IC0GAwB,cAnKb,SAAAA,EAAYxE,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAqE,IACjBvE,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAmF,GAAAlE,KAAAH,KAAMH,KA+CRyE,aAAe,SAAAC,GAAS,IAAAC,EACED,EAAMpC,OAAtBsC,EADcD,EACdC,KAAMC,EADQF,EACRE,MACd5E,EAAKW,SAALvB,OAAAC,EAAA,EAAAD,CAAA,GACGuF,EAAOC,KAnDO5E,EAwDnB6E,MAAQ,SAAAhF,GACN,OAAOkD,EAAKa,UAAU/D,GAAUgE,KAAK,SAAAiB,GAEnC9E,EAAKW,SAAS,CAAEmE,SAChBtB,QAAQC,IAAI,qBACZsB,OAAOC,SAAS5D,KAAO,mBA7DRpB,EAmEnBiF,YAAc,SAAAR,GACZA,EAAMS,iBACN1B,QAAQC,IAAR,iBAA8BzD,EAAKS,OACnC+C,QAAQC,IAAI,aAAczD,EAAKD,OAC/BC,EAAK6E,MAAM7E,EAAKS,OAAO0E,MAAM,SAAAC,GAE3B5B,QAAQC,IAAI,8BAA+B2B,GAE3C,IAAMC,EAASD,EACfpF,EAAKW,SAAS,CAAE0E,OAAQA,OA1E1BrF,EAAKS,MAAQ,CACX6E,MAAO,GACPC,SAAU,GACVF,OAAQ,IALOrF,mFA4BjB,IAAI2D,EAAQZ,EAAKC,SAEjB,GAAIW,EAAO,CACTH,QAAQC,IAAI,qBAAsBvD,KAAKH,OACvCgD,EAAKW,cAAcC,GAEnB,IAAI6B,EAAczC,EAAKI,iBACvBK,QAAQC,IAAI+B,GAGZT,OAAOC,SAAS5D,KAAO,sBAEdoE,GAAeA,EAAYC,IAAMC,KAAKC,MAAQ,KACvD5C,EAAKsB,aACLU,OAAOC,SAAS5D,KAAO,KAEvBoC,QAAQC,IAAI,0DA4Cd,OACE7C,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWlE,UAAU,mBACnBd,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KAaNnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOtE,UAAU,eACfd,EAAAC,EAAAC,cAACmF,EAAA,EAAD,cACArF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAWxE,UAAU,cACnBd,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACEvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACExF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,IAAI,gBAAX,SACA1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,QACL7B,KAAK,QACLlF,GAAG,eACHgH,YAAY,sBACZ7B,MAAO1E,KAAKO,MAAM6E,MAClBoB,SAAUxG,KAAKsE,eAEhBtE,KAAKO,MAAM4E,OAAOC,OAEjB1E,EAAAC,EAAAC,cAAA,UAAKZ,KAAKO,MAAM4E,SAGpBzE,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACExF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,IAAI,mBAAX,YACA1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,WACL7B,KAAK,WACLlF,GAAG,kBACHgH,YAAY,WACZ7B,MAAO1E,KAAKO,MAAM8E,SAClBmB,SAAUxG,KAAKsE,gBAGnB5D,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAQC,SAAO,EAAC5F,MAAM,UAAUM,QAASpB,KAAK+E,aAA9C,uBAvIM1C,IAAMC,oBCzBxBqE,SAAQ,CACZ,CACEC,IAAK,wCACLC,QAAS,UACTC,QAAS,8BACTC,OAAQ,SAEV,CACEH,IAAK,wCACLC,QAAS,UACTC,QAAS,uCACTC,OAAQ,iBAEV,CACEH,IAAK,wCACLC,QAAS,UACTC,QAAS,8BACTC,OAAQ,0BAOGC,EAFI,kBAAMtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAsBN,MAAOA,EAAOnF,UAAU,cCmCxD0F,cArDb,SAAAA,EAAYrH,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAkH,IACjBpH,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAgI,GAAA/G,KAAAH,KAAMH,KACDU,MAAQ,CACX6E,MAAO,GACPC,SAAU,GACVF,OAAQ,IALOrF,mFAgBjB,IAAI2D,EAAQZ,EAAKC,SAEjB,GAAIW,EAAO,CACTH,QAAQC,IAAI,qBAAsBvD,KAAKH,OACvCgD,EAAKW,cAAcC,GAEnB,IAAI6B,EAAczC,EAAKI,iBACvBK,QAAQC,IAAI+B,GAGZT,OAAOC,SAAS5D,KAAO,sBAEdoE,GAAeA,EAAYC,IAAMC,KAAKC,MAAQ,KACvD5C,EAAKsB,aACLU,OAAOC,SAAS5D,KAAO,KAEvBoC,QAAQC,IAAI,0DAKd,OACE7C,EAAAC,EAAAC,cAAA,WACG0C,QAAQC,IAAI,sBAAuBvD,KAAKH,OACzCa,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyG,EACKrH,KAAKH,eA7CCyC,sBC6SLgF,sBA/Rb,SAAAA,EAAYzH,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAsH,IACjBxH,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAoI,GAAAnH,KAAAH,KAAMH,KAoBRyE,aAAe,SAAAC,GAAS,IAAAC,EACED,EAAMpC,OAAtBsC,EADcD,EACdC,KAAMC,EADQF,EACRE,MACd5E,EAAKW,SAALvB,OAAAC,EAAA,EAAAD,CAAA,GACGuF,EAAOC,KAxBO5E,EA4BnByH,OAAS,SAAA5H,GACP,OAAOX,EAAIwI,aAAa7H,GAAUgE,KAAK,SAAAiB,GAErCtB,QAAQC,IAAI,+BAAgCqB,GAC5CC,OAAOC,SAAS5D,KAAO,OAhCRpB,EAoCnB2H,aAAe,SAAAlD,GACbA,EAAMS,iBACN1B,QAAQC,IAAI,eAEZ,IAAMmE,EAAgB,CACpBC,UAAW7H,EAAKS,MAAMoH,UACtBC,SAAU9H,EAAKS,MAAMqH,SACrBxC,MAAOtF,EAAKS,MAAM6E,MAClByC,aAAc/H,EAAKS,MAAMsH,aACzBC,UAAWhI,EAAKS,MAAMuH,UACtBC,SAAUjI,EAAKS,MAAMwH,SACrB1C,SAAUvF,EAAKS,MAAM8E,SACrB2C,YAAalI,EAAKS,MAAM0H,eACxBC,IAAKpI,EAAKS,MAAM2H,IAChBC,OAAQrI,EAAKS,MAAM4H,OACnBC,UAAWtI,EAAKS,MAAM6H,WAExB9E,QAAQC,IAAImE,GAEZ5H,EAAKyH,OAAOG,GAAezC,MAAM,SAAAC,GAC/B5B,QAAQC,IAAI,gCAAiC2B,GAE7C,IAAMC,EAASD,EACfpF,EAAKW,SAAS,CAAE0E,OAAQA,OAzD1BrF,EAAKS,MAAQ,CACX6E,MAAO,GAGPuC,UAAW,GACXC,SAAU,GAEVC,aAAc,GACdC,UAAW,GACXC,SAAU,GACV1C,SAAU,GACV4C,eAAgB,GAChBC,IAAK,GACLC,OAAQ,GACRC,UAAW,GACXjD,OAAQ,IAEV7B,QAAQC,IAAIzD,EAAKS,MAAMoH,WAnBN7H,wEAqFjB,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KAEEhF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACEvF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,kBAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,OACL7B,KAAK,YACLC,MAAO1E,KAAKO,MAAMoH,UAClBnB,SAAUxG,KAAKsE,iBAIrB5D,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,iBAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,OACL7B,KAAK,WACLC,MAAO1E,KAAKO,MAAMqH,SAClBpB,SAAUxG,KAAKsE,kBAMvB5D,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,aAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,QACL7B,KAAK,QACLC,MAAO1E,KAAKO,MAAM6E,MAClBoB,SAAUxG,KAAKsE,iBAIrB5D,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,gCAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE3B,MAAO1E,KAAKO,MAAMsH,aAClBrB,SAAUxG,KAAKsE,aACfgC,KAAK,SACL7B,KAAK,gBAEL/D,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,sCAKRF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,sBAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE3B,MAAO1E,KAAKO,MAAMuH,UAClBtB,SAAUxG,KAAKsE,aACfgC,KAAK,SACL7B,KAAK,aAEL/D,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,oCAINF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,kBAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE3B,MAAO1E,KAAKO,MAAMwH,SAClBvB,SAAUxG,KAAKsE,aACfgC,KAAK,SACL7B,KAAK,YAEL/D,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,sCAGJF,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAUvH,MAAM,SAAhB,6EAMJJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,gBAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,WACL7B,KAAK,MACL8B,YAAY,2BACZ7B,MAAO1E,KAAKO,MAAM2H,IAClB1B,SAAUxG,KAAKsE,iBAIrB5D,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,8BAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,WACL7B,KAAK,SACL8B,YAAY,kDACZ7B,MAAO1E,KAAKO,MAAM4H,OAClB3B,SAAUxG,KAAKsE,kBAKvB5D,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,iBAEEzF,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAUvH,MAAM,SAAhB,iFAIAJ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,MACL7B,KAAK,YACLC,MAAO1E,KAAKO,MAAM6H,UAClB5B,SAAUxG,KAAKsE,kBAMvB5D,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,gBAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,WACL7B,KAAK,WACLC,MAAO1E,KAAKO,MAAM8E,SAClBmB,SAAUxG,KAAKsE,iBAIrB5D,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,uBAEEzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,KAAK,WACL7B,KAAK,iBACLC,MAAO1E,KAAKO,MAAM0H,eAClBzB,SAAUxG,KAAKsE,kBAKvB5D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAK0C,GAAI,CAAEC,OAAQ,IAChBvI,KAAKO,MAAM4E,QACVzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKZ,KAAKO,MAAM4E,OAAOC,OACvB1E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAKZ,KAAKO,MAAM4E,OAAOE,WAI3B3E,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAQC,SAAO,EAAC5F,MAAM,UAAUM,QAASpB,KAAKyH,cAA9C,kCApRSpF,IAAMC,YCsDhBkG,uBAtDb,SAAAA,EAAY3I,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAwI,IACjB1I,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAsJ,GAAArI,KAAAH,KAAMH,KAEDU,MAAQ,GAHIT,mFAgBjB,IAAI2D,EAAQZ,EAAKC,SAEjB,GAAIW,EAAO,CACTH,QAAQC,IAAI,qBAAsBvD,KAAKH,OACvCgD,EAAKW,cAAcC,GAEnB,IAAI6B,EAAczC,EAAKI,iBACvBK,QAAQC,IAAI+B,GAGZT,OAAOC,SAAS5D,KAAO,mDAmBzB,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAAC6H,GAAezI,KAAKH,eAjDRyC,cCXNoG,GAND,SAAC7I,GACX,OACIa,EAAAC,EAAAC,cAACuG,EAAD,OCaawB,uBACnB,SAAAA,EAAY9I,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAA2I,IACjB7I,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAyJ,GAAAxI,KAAAH,KAAMH,KAYR+I,OAAS,WACPtF,QAAQC,IAAI,gBACZV,EAAKsB,aACLU,OAAOC,SAAS5D,KAAO,KAbvBpB,EAAKM,OAASN,EAAKM,OAAOC,KAAZnB,OAAAoB,EAAA,EAAApB,CAAAY,IACdA,EAAKS,MAAQ,CACXC,QAAQ,GALOV,wEASjBE,KAAKS,SAAS,CACZD,QAASR,KAAKO,MAAMC,0CAStB,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,MACjCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAaC,KAAK,KAAlB,mBACAR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAeC,QAASpB,KAAKI,SAC7BM,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUb,OAAQR,KAAKO,MAAMC,OAAQc,QAAM,GACzCZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,GAC7BZ,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASR,KAAK,UAAd,WAEFR,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChCnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,GAAzB,QAGArB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAcC,OAAK,GACjBvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAMC,GAAG,gBAAT,qBAEFpI,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAMC,GAAI,cAAgB,CAAC,yBAA3B,kBAIFpI,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAcE,SAAO,IACrB1B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAcd,QAASpB,KAAK4I,QAA5B,uBA5CsBvG,IAAMC,YCia/ByG,uBAnab,SAAAA,EAAYlJ,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAA+I,IACjBjJ,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAA6J,GAAA5I,KAAAH,KAAMH,KAmCRyE,aAAe,SAAAC,GAAS,IAAAC,EACED,EAAMpC,OAAtBsC,EADcD,EACdC,KAAMC,EADQF,EACRE,MACd5E,EAAKW,SAALvB,OAAAC,EAAA,EAAAD,CAAA,GACGuF,EAAOC,KAvCO5E,EA4CnBkJ,kBAAoB,SAAAzE,GAClB,IAAMpC,EAASoC,EAAMpC,OACfuC,EAAwB,aAAhBvC,EAAOmE,KAAsBnE,EAAO8G,QAAU9G,EAAOuC,MAC7DD,EAAOtC,EAAOsC,KAEpB3E,EAAKW,SAALvB,OAAAC,EAAA,EAAAD,CAAA,GACGuF,EAAOC,KAlDO5E,EAuDnBoJ,aAAe,SAAA3E,GACbA,EAAMS,iBACN1B,QAAQC,IAAR,2BAAwCzD,EAAKS,OAG7ClB,IACEC,KAAK,gBAAiBQ,EAAKS,OAC1BoD,KAAK,SAAAC,GAAG,OAAIN,QAAQC,IAAI,mBAAoBK,EAAIC,SA3DnD/D,EAAKS,MAAQ,CACX4I,aAAc,GACdC,UAAW,GACXC,QAAS,GACTC,MAAM,EACNC,SAAS,EACTC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,aAAa,EACbC,eAAe,EACfC,UAAU,EACVC,eAAe,EAEfC,SAAS,GAIX3K,EAAKwE,aAAexE,EAAKwE,aAAajE,KAAlBnB,OAAAoB,EAAA,EAAApB,CAAAY,IACpBA,EAAKkJ,kBAAoBlJ,EAAKkJ,kBAAkB3I,KAAvBnB,OAAAoB,EAAA,EAAApB,CAAAY,IAhCRA,wEAkEjB,OACEY,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACbd,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACbd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,UAAb,oBACAd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,cAAb,2DAGJd,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,QAAM8J,SAAU1K,KAAKkJ,cACnBxI,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,IAAIyC,GAAG,KACb5H,EAAAC,EAAAC,cAACuF,EAAA,EAAD,gCACIzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACAC,KAAK,OACL7B,KAAK,eACL8B,YAAY,gBACZ7B,MAAO1E,KAAKO,MAAM4I,aAClB3C,SAAUxG,KAAKsE,kBAKvB5D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,IAAIyC,GAAG,KACb5H,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACExF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,kBACRzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACYC,KAAK,OACL7B,KAAK,YACLlF,GAAG,YACHgH,YAAY,mBACZ7B,MAAO1E,KAAKO,MAAM6I,UAClB5C,SAAUxG,KAAKsE,mBAMzB5D,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,IAAIyC,GAAG,KACb5H,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACExF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,gBACRzF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACYC,KAAK,OACL7B,KAAK,UACLlF,GAAG,UACHgH,YAAY,mBACZ7B,MAAO1E,KAAKO,MAAM8I,QAClB7C,SAAUxG,KAAKsE,mBAMzB5D,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAGfd,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,qBACAjF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,OACL6B,KAAK,WACL/G,GAAG,OACH0J,QAASjJ,KAAKO,MAAM+I,KACpB9C,SAAUxG,KAAKgJ,oBANnB,UAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,UACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMgJ,QACpB/C,SAAUxG,KAAKgJ,oBANnB,aAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,OACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMiJ,KACpBhD,SAAUxG,KAAKgJ,oBANnB,uBAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,SACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMkJ,OACpBjD,SAAUxG,KAAKgJ,oBANnB,mBAaNtI,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,sBACAjF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,OACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMmJ,KACpBlD,SAAUxG,KAAKgJ,oBANnB,0CAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,WACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMoJ,SACpBnD,SAAUxG,KAAKgJ,oBANnB,uBAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,WACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMqJ,SACpBpD,SAAUxG,KAAKgJ,oBANnB,cAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,QACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMsJ,MACpBrD,SAAUxG,KAAKgJ,oBANnB,yCAaNtI,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KAAKjF,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAUvH,MAAM,SAAhB,+DACPJ,EAAAC,EAAAC,cAAA,WADO,kCAELF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,UACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMuJ,QACpBtD,SAAUxG,KAAKgJ,oBANnB,cAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,SACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMwJ,OACpBvD,SAAUxG,KAAKgJ,oBANnB,qBAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,SACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMyJ,OACpBxD,SAAUxG,KAAKgJ,oBANnB,iBAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,SACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAM0J,OACpBzD,SAAUxG,KAAKgJ,oBANnB,qBAQFtI,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KAAKjF,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAUvH,MAAM,SAAhB,6BAQTJ,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,oBACAjF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KAAKjF,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAUvH,MAAM,SAAhB,mMAELJ,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,IAAIyC,GAAG,KACb5H,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,UACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAM2J,QACpB1D,SAAUxG,KAAKgJ,oBANnB,mBAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,IAAIyC,GAAG,KACb5H,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,UACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAM4J,QACpB3D,SAAUxG,KAAKgJ,oBANnB,oCAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,IAAIyC,GAAG,KACb5H,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,SACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAM6J,OACpB5D,SAAUxG,KAAKgJ,oBANnB,wBAYNtI,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,cACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAM8J,YACpB7D,SAAUxG,KAAKgJ,oBANnB,2BAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,gBACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAM+J,cACpB9D,SAAUxG,KAAKgJ,oBANnB,gBAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,WACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMgK,SACpB/D,SAAUxG,KAAKgJ,oBANnB,eAWJtI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAWyE,OAAK,GACdjK,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOwE,OAAK,GACVjK,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACE5B,KAAK,gBACL6B,KAAK,WACL/G,GAAG,YACH0J,QAASjJ,KAAKO,MAAMiK,cACpBhE,SAAUxG,KAAKgJ,oBANnB,sBAaNtI,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,mCAzZmBpE,IAAMC,YCgEtBsI,eAxEb,SAAAA,EAAY/K,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAA4K,IACjB9K,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAA0L,GAAAzK,KAAAH,KAAMH,KAmCRyE,aAAe,SAAAC,GAAS,IAAAC,EACED,EAAMpC,OAAtBsC,EADcD,EACdC,KAAMC,EADQF,EACRE,MACd5E,EAAKW,SAALvB,OAAAC,EAAA,EAAAD,CAAA,GACGuF,EAAOC,KAvCO5E,EA4CnBkJ,kBAAoB,SAAAzE,GAClB,IAAMpC,EAASoC,EAAMpC,OACfuC,EAAwB,aAAhBvC,EAAOmE,KAAsBnE,EAAO8G,QAAU9G,EAAOuC,MAC7DD,EAAOtC,EAAOsC,KAEpB3E,EAAKW,SAALvB,OAAAC,EAAA,EAAAD,CAAA,GACGuF,EAAOC,KAlDO5E,EAsDnBoJ,aAAe,SAAA3E,GACbA,EAAMS,iBACN1B,QAAQC,IAAR,2BAAwCzD,EAAKS,OAG7ClB,IAAMC,KAAK,gBAAiBQ,EAAKS,OAAOoD,KAAK,SAAAC,GAAG,OAAIN,QAAQC,IAAIK,EAAIC,SAxDpE/D,EAAKS,MAAQ,CACX4I,aAAc,GACdC,UAAW,GACXC,QAAS,GACTC,MAAM,EACNC,SAAS,EACTC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,aAAa,EACbC,eAAe,EACfC,UAAU,EACVC,eAAe,EAEfC,SAAS,GAIX3K,EAAKwE,aAAexE,EAAKwE,aAAajE,KAAlBnB,OAAAoB,EAAA,EAAApB,CAAAY,IACpBA,EAAKkJ,kBAAoBlJ,EAAKkJ,kBAAkB3I,KAAvBnB,OAAAoB,EAAA,EAAApB,CAAAY,IAhCRA,wEA+DjB,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiK,GAAD,MACAnK,EAAAC,EAAAC,cAACkK,GAAD,cAnEWzI,IAAMC,uECgDVyI,eA5CX,SAAAA,EAAYlL,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAA+K,IACfjL,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAA6L,GAAA5K,KAAAH,KAAMH,KACDU,MAAQ,CACTyK,OAAO,EACPC,SAAU,IAGdnL,EAAKM,OAASN,EAAKM,OAAOC,KAAZnB,OAAAoB,EAAA,EAAApB,CAAAY,IAPCA,wEAWfE,KAAKS,SAAS,SAAAyK,GAAS,MAAK,CACxBF,OAAQE,EAAUF,0CAKtB,IAAMG,EAAWzK,EAAAC,EAAAC,cAAA,UAAQY,UAAU,QAAQJ,QAASpB,KAAKI,QAAxC,QAOjB,OAEIM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQwK,MATA,CACZC,gBAAmB,UACnBC,aAAgB,MAChBC,OAAU,SAMoBnK,QAASpB,KAAKI,QAASJ,KAAKH,MAAM2L,YAA5D,IAA0ExL,KAAKO,MAAM4I,aAArF,IAAoGnJ,KAAKO,MAAM6I,UAA/G,OAA8HpJ,KAAKO,MAAM8I,SACzI3I,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAOjL,OAAQR,KAAKO,MAAMyK,MAAO5K,OAAQJ,KAAKI,OAAQoB,UAAWxB,KAAKH,MAAM2B,WACxEd,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAatL,OAAQJ,KAAKI,OAAQuL,MAAOR,GAAWnL,KAAKH,MAAM+L,QAAQC,OACvEnL,EAAAC,EAAAC,cAACkL,GAAA,EAAD,KACK9L,KAAKH,MAAM+L,SAEhBlL,EAAAC,EAAAC,cAACmL,GAAA,EAAD,KACIrL,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAQ3F,MAAM,UAAUM,QAASpB,KAAKI,QAAtC,UAA8D,IAC9DM,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAQ3F,MAAM,SAASM,QAASpB,KAAKI,QAArC,UAA6D,IAC7DM,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAQ3F,MAAM,YAAYM,QAASpB,KAAKI,QAAxC,mBArCQiC,IAAMC,WCSlC0J,GAAS,CACXC,gBAAiB,+CACjBC,eAAgB,QAChBpL,MAAO,UACPqL,UAAW,QACXC,WACE,4FAmIWC,eA/Hb,SAAAA,EAAYxM,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAqM,IACjBvM,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAmN,GAAAlM,KAAAH,KAAMH,KACDU,MAAQ,CACX0K,SAAU,GACVrG,KAAM,MAJS9E,mFAWjB,IAAI2D,EAAQZ,EAAKC,SAEjB,GAAKW,EAGE,GAAIA,EAAO,CAEhBZ,EAAKW,cAAcC,GAEnB,IAAI6B,EAAczC,EAAKI,iBACvBK,QAAQC,IAAI,sBAAuB+B,GAEnCtF,KAAKS,SAAS,CAAEmE,KAAM5E,KAAKsF,mBAElBA,EAAYC,IAAMC,KAAKC,MAAQ,KAAkB,OAAVhC,EAChDZ,EAAKsB,aAELb,QAAQC,IAAI,8BAdZD,QAAQC,IAAI,sBACZsB,OAAOC,SAAS5D,KAAO,qCAgCzB,IAAIoL,EAAe,CACjBF,WACE,2FACFG,SAAU,QAsBZ,OACE7L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiK,GAAD,MACAnK,EAAAC,EAAAC,cAAC4L,GAAA,EAAD,CAAWC,OAAK,EAACrB,MAAOY,IACtBtL,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAW+G,OAAK,GACd/L,EAAAC,EAAAC,cAAA,MAAIY,UAAU,aAAd,sBAEAd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,QAAb,mEAKJd,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACEjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACEC,GAAG,IACHyC,GAAG,IACH8C,MAAO,CAAEC,gBAAiB,UAAWC,aAAc,QAEnD5K,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACExF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,IAAI,kBAAkBgF,MAAOkB,GAApC,2BAGA5L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gGAIAF,EAAAC,EAAAC,cAAC8L,GAAA,EAAD,CACEpG,KAAK,SACL/G,GAAG,sBACHkF,KAAK,eACLkI,MAAM,0BAKdjM,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,QACNnF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOiF,MAAOkB,GAAd,iBAEgC,IAA/BtM,KAAKO,MAAM0K,SAAS2B,QACnBlM,EAAAC,EAAAC,cAAA,wCAEDZ,KAAKO,MAAM0K,SAAS2B,OAAS,GAC5B5M,KAAKO,MAAM0K,SAAS4B,IAAI,SAAAjB,GAAO,OAC7BlL,EAAAC,EAAAC,cAACkM,GAAD,CAAmBlB,QAASA,iBAtHtBtJ,uBCjBHyK,eACnB,SAAAA,EAAYlN,GAAO,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAA+M,IACjBjN,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAA6N,GAAA5M,KAAAH,KAAMH,KAEAU,MAAQ,CACXyM,aAAc,IAJAlN,wEAgBjB,OACEY,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAACqM,GAAA,EAAD,KACEvM,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CAAOC,MAAI,EAAChM,KAAK,KACfR,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CAAOE,QAAM,EAACC,WAAS,kBAAkBC,IAAI,qBAGjD3M,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CAAOK,MAAI,GACT5M,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CAAOM,SAAO,GAAd,+CAGA7M,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,iCAGAjF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,sCAKJjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,GAAG,KACNnF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAQ+G,KAAK,MAAb,yBAvCgCnL,IAAMC,WCInCmL,GATC,SAAC5N,GACb,OACIa,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiK,GAAD,MACAnK,EAAAC,EAAAC,cAAC8M,GAAD,iBCeGC,GApBM,SAAAC,GAAA,IAActL,EAAdsL,EAAGC,UAAyBC,EAA5B5O,OAAA6O,GAAA,EAAA7O,CAAA0O,EAAA,sBACnBlN,EAAAC,EAAAC,cAACoN,EAAA,EAAD9O,OAAA+O,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAArO,GAAK,OAGXgD,EAAKC,SACHpC,EAAAC,EAAAC,cAAC0B,EAAczC,GAEfa,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CACElF,GAAI,CACFqF,SAAU,IACV5N,MAAO,CAAE6N,KAAMvO,EAAMiF,kBCiBlBuJ,GAnBC,SAAAxO,GACd,OACEa,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiK,GAAD,MACAnK,EAAAC,EAAAC,cAAC4L,GAAA,EAAD,MACA9L,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAM0N,KAAK,MAAMC,aAAW,gCAA5B,mBCmHOC,eA9Fb,SAAAA,IAAc,IAAA1O,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAwO,IACZ1O,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAsP,GAAArO,KAAAH,QAMKO,MAAQ,CACXqE,KAAM,MARI9E,mFAoBZ,IAAI2D,EAAQZ,EAAKC,SAEjB,GAAIW,EAAO,CACTZ,EAAKW,cAAcC,GAEnB,IAAI6B,EAAczC,EAAKI,iBACvBK,QAAQC,IAAI+B,GAERA,EAAYC,IAAMC,KAAKC,MAAQ,MACjC5C,EAAKsB,aACLU,OAAOC,SAAS5D,KAAO,KAGzBlB,KAAKS,SAAS6E,QAEdhC,QAAQC,IAAI,0DAoBP,IAAAkL,EAAAzO,KACP,OACEU,EAAAC,EAAAC,cAACiI,EAAA,EAAD,KACEnI,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OAIbd,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOU,KAAK,SAASC,OAAK,EAACd,UAAWnF,KACtChI,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOU,KAAK,UAAUC,OAAK,EAACd,UAAWrF,KACvC9H,EAAAC,EAAAC,cAACgO,GAAD,CAAcF,KAAK,eAAeC,OAAK,EAACd,UAAWjD,KAGnDlK,EAAAC,EAAAC,cAACgO,GAAD,CAAcF,KAAK,iBAAiBC,OAAK,EAACd,UAAWxB,KACrD3L,EAAAC,EAAAC,cAACgO,GAAD,CAAcF,KAAK,eAAeC,OAAK,EAACd,UAAWJ,KACnD/M,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOU,KAAK,IAAIR,OAAQ,SAAArO,GAAK,OAAIa,EAAAC,EAAAC,cAACiO,EAAUJ,EAAK5O,UAEjDa,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOH,UAAWQ,eAzEZ/L,oBCxClBwM,IAASZ,OAAOxN,EAAAC,EAAAC,cAACmO,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.9a23d66b.chunk.js","sourcesContent":["// we'll be requiring axios\n\nimport axios from \"axios\";\n\n// If we were, then it'd look something like...\n\n// import axios from \"axios\";\n// export default {\n// -- insert CRUD here --\n// }\n\nexport default {\n  //login/ sign in already created in utils/auth.js logUserIn(), signIn\n  //save user to db\n  [\"Method\"]: function(user_id) {\n    return axios.post(\"/\" + user_id);\n  },\n  //get user by id\n  getUser: function(id) {\n    return axios.get(\"/api/users\" + id);\n  },\n  //save user's request to db\n  [\"Method\"]: function(request_id) {\n    return axios.post(\"/api/[link end point]\" + request_id);\n  },\n  //get request by id\n  getRequest: function(id) {\n    return axios.get(\"/api/[link end point]\" + id);\n  },\n  //delete a request\n  deleteRequest: function(id) {\n    return axios.delete(\"/api/requests\" + id);\n  },\n  signInUser: function(userInfo) {\n    return axios.post(\"/api/auth/login\", userInfo);\n  },\n  registerUser: function(userInfo) {\n    return axios.post(\"/api/auth/register\", userInfo);\n  }\n};\n\n// JASA RESPONSE -- we will need axios for frontend HTTP requests\n// HTTP  requests on frontend will tell our backend how to respond\n","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\n\nexport default class NavigationBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">Neighbor Favor</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/about\">About!</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  View Our Work\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    <NavLink href=\"https://github.com/RBraden3288/Project3MERN\" target=\"blank\">GitHub</NavLink>\n                  </DropdownItem>\n                  <DropdownItem>\n                    <NavLink href=\"/\" target=\"blank\">Heroku</NavLink>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    Contact Us!\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\n","import axios from \"axios\";\nimport frontendAPI from \"./API\";\nimport jwtDecode from \"jwt-decode\";\n\nconst parse = JSON.parse;\nconst stringify = JSON.stringify;\n\naxios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\n\nconst auth = {\n  // get the item out of local storage if it's there; otherwise return null\n  getJwt() {\n    // if (localStorage && localStorage.getItem(token)) {\n\n    return localStorage.getItem(\"jwtToken\");\n    // )\n    // || null;\n    // }\n\n    //     // if (sessionStorage && sessionStorage.getItem(key)) {\n    //     //   return parse(sessionStorage.getItem(key)) || null;\n    //     // }\n\n    // return null;\n  },\n\n  // IS NEEDED?\n  // setJwt(token) {\n\n  // }\n\n  getCurrentUser() {\n    const jwt = auth.getJwt();\n\n    if (jwt === undefined) {\n      return null;\n    }\n\n    const decodedJwt = jwtDecode(jwt);\n    console.log(\"decoded jwt: \", decodedJwt);\n    return decodedJwt;\n  },\n\n  setAuthHeader(token) {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  },\n\n  logUserIn(userInfo) {\n    // console.log(frontendAPI.signInUser);\n    return (\n      axios\n        .post(\"/api/auth/login\", userInfo)\n        // frontendAPI\n        // .signInUser(userInfo)\n        .then(res => {\n          console.log(res);\n          const token = res.data.token;\n          const headerToken = res.data.headerToken;\n          console.log(\"here is user's token: \", token);\n          console.log(headerToken);\n\n          localStorage.setItem(\"jwtToken\", stringify(token));\n          console.log(\"we stored it in local storage now!\");\n          this.setAuthHeader(headerToken);\n          console.log(\"now requests will be authorized\");\n\n          const currentUserObject = this.getCurrentUser();\n          console.log(\"current user object: \", currentUserObject);\n\n          return Promise.resolve(currentUserObject);\n        })\n      // .catch(err => {\n      //   console.dir(err);\n      // })\n    );\n  },\n\n  logOutUser() {\n    // if (localStorage && localStorage.getItem(key)) {\n    return localStorage.removeItem(\"jwtToken\");\n    // }\n  }\n};\n\nexport default auth;\n\n// CODE FROM WITH LINO / VIVIAN THAT WORKED SOMEWHAT\n\n// import isEmpty from \"lodash/isEmpty\";\n// // import axios from \"axios\";\n// // jwt library\n// // parse token\n\n// const TOKEN_KEY = \"jwtToken\";\n// const USER_INFO = \"userInfo\";\n\n// const parse = JSON.parse;\n// const stringify = JSON.stringify;\n\n// const auth = {\n//   /**\n//    * Remove an item from the used storage\n//    * @param  {String} key [description]\n//    */\n//   clear(key) {\n//     if (localStorage && localStorage.getItem(key)) {\n//       return localStorage.removeItem(key);\n//     }\n\n//     // if (sessionStorage && sessionStorage.getItem(key)) {\n//     //   return sessionStorage.removeItem(key);\n//     // }\n\n//     return null;\n//   },\n\n//   /**\n//    * Clear all app storage\n//    */\n//   clearAppStorage() {\n//     if (localStorage) {\n//       localStorage.clear();\n//     }\n\n//     // if (sessionStorage) {\n//     //   sessionStorage.clear();\n//     // }\n//   },\n\n//   clearToken(tokenKey = TOKEN_KEY) {\n//     axios.defaults.headers.common[\"Authorization\"] = \"\";\n//     return auth.clear(tokenKey);\n//   },\n\n//   clearUserInfo(userInfo = USER_INFO) {\n//     return auth.clear(userInfo);\n//   },\n\n//   /**\n//    * Returns data from storage\n//    * @param  {String} key Item to get from the storage\n//    * @return {String|Object}     Data from the storage\n//    */\n//   get(key) {\n//     if (localStorage && localStorage.getItem(key)) {\n//       return parse(localStorage.getItem(key)) || null;\n//     }\n\n//     // if (sessionStorage && sessionStorage.getItem(key)) {\n//     //   return parse(sessionStorage.getItem(key)) || null;\n//     // }\n\n//     return null;\n//   },\n\n//   getToken(tokenKey = TOKEN_KEY) {\n//     return auth.get(tokenKey);\n//   },\n\n//   getUserInfo(userInfo = USER_INFO) {\n//     return auth.get(userInfo);\n//   },\n\n//   /**\n//    * Set data in storage\n//    * @param {String|Object}  value    The data to store\n//    * @param {String}  key\n//    * @param {Boolean} isLocalStorage  Defines if we need to store in localStorage or sessionStorage\n//    */\n//   set(value, key, isLocalStorage = true) {\n//     if (isEmpty(value)) {\n//       return null;\n//     }\n\n//     if (isLocalStorage && localStorage) {\n//       return localStorage.setItem(key, stringify(value));\n//     }\n\n//     // if (sessionStorage) {\n//     //   return sessionStorage.setItem(key, stringify(value));\n//     // }\n\n//     return null;\n//   },\n\n//   setToken(value = \"\", isLocalStorage = true, tokenKey = TOKEN_KEY) {\n//     axios.defaults.headers.common[\"Authorization\"] = value;\n//     return auth.set(value, tokenKey, isLocalStorage);\n//   },\n\n//   logUserIn(userInfo) {\n//     return axios\n//       .post(\"http://localhost:3001/api/users/login\", userInfo)\n//       .then(result => {\n//         console.log(\"HERE IS JASA TOKEN\", result.data.token);\n\n//         auth.setToken(result.data.token);\n\n//         // decode the token\n//         const userObject = \"\";\n//         // pass user object to app\n//         return Promise.resolve(userObject);\n//       })\n//       .catch(console.error);\n//   }\n\n//   // setUserInfo(value = \"\", isLocalStorage = false, userInfo = USER_INFO) {\n//   //   return auth.set(value, userInfo, isLocalStorage);\n//   // }\n// };\n\n// export default auth;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Toast,\n  ToastBody,\n  ToastHeader,\n  Container,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\";\nimport \"./style.css\";\n// import LoginFields from \"../HomeRegisteredEmailInput\";\n\nimport auth from \"../../utils/auth\";\n\n// export default class Grid extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       email: \"\",\n//       password: \"\",\n//       errors: {}\n//     };\n// }\n\nclass LoginGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n  //bind the methods to \"this\"\n  // this.handleChange = this.handleChange.bind(this);\n  // this.handleSubmit = this.handleSubmit.bind(this);\n  // this.handleSignIn = this.handleSignIn.bind(this);\n  // }\n  //event handlers and functions to handle form submission\n  // handleChange = event => {\n  //   const { name, value } = event.target;\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // };\n\n  componentDidMount() {\n    // check to see if there is a token (i.e. if the user has already logged in)\n    // if so, set the current user to be this user using their token\n    // (i.e. run the current user function --\n    // which will decode the user's token from localStorage or return null\n    // --> if this returns a truthy value (meaning there's a current user)\n    // --> authorize the user's requests using their token\n    var token = auth.getJwt();\n\n    if (token) {\n      console.log(\"Here are my props:\", this.props);\n      auth.setAuthHeader(token);\n      // console.log(token.exp);\n      var currentUser = auth.getCurrentUser();\n      console.log(currentUser);\n\n      // this.setState(currentUser);\n      window.location.href = \"/dashboard/:id\";\n      // this.props.history.push(\"/about\");\n    } else if (currentUser && currentUser.exp < Date.now() / 1000) {\n      auth.logOutUser();\n      window.location.href = \"/\";\n    } else {\n      console.log(\"User is not logged in\");\n    }\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // <<<<<<< HEAD\n  login = userInfo => {\n    return auth.logUserIn(userInfo).then(user => {\n      // set user state\n      this.setState({ user });\n      console.log(\"User is logged in\");\n      window.location.href = \"dashboard/:id\";\n      // this.props.history.push(\"/dashboard\" + user._id);\n      // this.setState({ user, redirectToReferrer: true });\n    });\n  };\n\n  handleLogIn = event => {\n    event.preventDefault();\n    console.log(`Email signup: `, this.state);\n    console.log(\"this.props\", this.props);\n    this.login(this.state).catch(err => {\n      // console.log(\"jasa's app doesnt log me in\", err.response);\n      console.log(\"jasa's app doesnt log me in\", err);\n      // const errors = err.response.data;\n      const errors = err;\n      this.setState({ errors: errors });\n    });\n  };\n\n  // handleSignUp = event => {\n  //   event.preventDefault();\n  //   console.log(`current state: `, this.state);\n  // };\n\n  render() {\n    // if\n    // console.log(\"e\", this.state.errors);\n    return (\n      <Container className=\"toast-container\">\n        <Row>\n          <Col xs=\"6\">\n            {/* <LoginFields\n            //   loginEmail={this.state.email}\n            //   password={this.state.password}\n            //   errors={this.state.errors}\n            //   handleChange={this.handleChange}\n            //   handleLogIn={this.handleLogin}\n            // {...props}\n            // login={props.login}\n            // authenticatedRedirect={props.authenticatedRedirect}\n            /> */}\n\n            {/* <div> */}\n            <Toast className=\"login_toast\">\n              <ToastHeader>Login</ToastHeader>\n              <ToastBody className=\"toast-body\">\n                <Form>\n                  <FormGroup>\n                    <Label for=\"exampleEmail\">Email</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"exampleEmail\"\n                      placeholder=\"johnsmith@email.com\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                    {this.state.errors.email && (\n                      // <h1>{this.state.errors.email}</h1>\n                      <h1>{this.state.errors}</h1>\n                    )}\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"examplePassword\">Password</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"examplePassword\"\n                      placeholder=\"password\"\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <Button outline color=\"success\" onClick={this.handleLogIn}>\n                    {/* <Link to={\"/dashboard/\"\n                                            // + [USERID]\n                                        }>Submit</Link> */}\n                    Submit\n                  </Button>\n                  {/* <button className='button'>\n//                                         <Link to={\"/dashboard/\"\n//                                             // + [USERID]\n//                                         }>Submit</Link>\n//                                     </button></button> */}\n                </Form>\n              </ToastBody>\n            </Toast>\n            {/* </div> */}\n          </Col>\n\n          {/* <Col xs=\"6\">\n            <SignUpField\n            // signUpEmail={this.state.email}\n            // handleChange={this.handleChange}\n            />\n          </Col> */}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default LoginGrid;\n// ===\n//                     <Col xs=\"6\">\n//                         <Toast className=\"signup_toast\">\n//                             <ToastHeader>\n//                                 Create your account!\n//                             </ToastHeader>\n//                             <ToastBody>\n//                                 <Form onSubmit={this.handleSubmit}>\n//                                     <FormGroup check>\n//                                         <Row>\n//                                             <Col >\n//                                                 <Label>Email\n//                                                 <Input\n//                                                         type=\"email\"\n//                                                         name=\"email\"\n//                                                         value={this.state.email}\n//                                                         onChange={this.handleChange}\n//                                                     />\n//                                                 </Label>\n//                                             </Col>\n//                                         </Row>\n//                                         <Row>\n//                                             <Col>\n//                                                 <button className='button'>\n//                                                     <Link to={{\n//                                                         pathname: \"/signup\",\n//                                                         state: {\n//                                                             emailInput: this.state.email\n//                                                         }\n//                                                     }}>Submit</Link>\n//                                                 </button>\n//                                             </Col>\n//                                         </Row>\n//                                     </FormGroup>\n//                                 </Form>\n//                             </ToastBody>\n//                         </Toast>\n//                     </Col>\n//                 </Row>\n//             </Container>\n//         );\n//     }\n// }\n","import React from 'react';\nimport { UncontrolledCarousel } from 'reactstrap';\nimport './style.css'\n\n\nconst items = [\n  {\n    src: 'https://i.ibb.co/c3BKHQh/IMG-7406.jpg',\n    altText: 'Slide 1',\n    caption: 'Come home to a clean space.',\n    header: 'Relax'\n  },\n  {\n    src: 'https://i.ibb.co/6ZMdCqY/IMG-7409.jpg',\n    altText: 'Slide 2',\n    caption: 'Expecting a package? Important mail?',\n    header: 'Peace of Mind'\n  },\n  {\n    src: 'https://i.ibb.co/pdNwSq4/IMG-7400.jpg',\n    altText: 'Slide 3',\n    caption: 'Get to know your neighbors.',\n    header: 'Building Communities'\n  }\n  \n];\n\nconst CarouselRS = () => <UncontrolledCarousel items={items} className='carousel'/>;\n\nexport default CarouselRS;","import React, { Component } from \"react\";\nimport NavigationBar from \"../components/Navbar/\";\nimport LoginGrid from \"../components/LoginGrid\";\nimport CarouselRS from \"../components/Carousel\";\nimport auth from \"../utils/auth\";\n\nimport \"../index.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // check to see if there is a token (i.e. if the user has already logged in)\n    // if so, set the current user to be this user using their token\n    // (i.e. run the current user function --\n    // which will decode the user's token from localStorage or return null\n    // --> if this returns a truthy value (meaning there's a current user)\n    // --> authorize the user's requests using their token\n    var token = auth.getJwt();\n\n    if (token) {\n      console.log(\"Here are my props:\", this.props);\n      auth.setAuthHeader(token);\n      // console.log(token.exp);\n      var currentUser = auth.getCurrentUser();\n      console.log(currentUser);\n\n      // this.setState(currentUser);\n      window.location.href = \"/dashboard/:id\";\n      // this.props.history.push(\"/about\");\n    } else if (currentUser && currentUser.exp < Date.now() / 1000) {\n      auth.logOutUser();\n      window.location.href = \"/\";\n    } else {\n      console.log(\"User is not logged in\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {console.log(\"props i LoginSignup\", this.props)}\n        <NavigationBar />\n        <CarouselRS />\n        <br />\n        <LoginGrid\n          {...this.props}\n          // login={props.login}\n          // authenticatedRedirect={props.redirectToReferrer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Toast,\n  ToastBody,\n  ToastHeader,\n  Container,\n  Row,\n  Col,\n  Form,\n  FormText,\n  FormGroup,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\";\nimport \"./style.css\";\n// import { userInfo } from \"os\";\nimport API from \"../../utils/API\";\nimport axios from \"axios\";\n\nclass SignUpGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      // newUser: {\n      // this will hold an array of objects identifying the user\n      firstName: \"\",\n      lastName: \"\",\n      //   email: this.props.location.state.email,\n      neighborhood: \"\",\n      residence: \"\",\n      entryway: \"\",\n      password: \"\",\n      verifypassword: \"\",\n      bio: \"\",\n      skills: \"\",\n      photo_url: \"\",\n      errors: {}\n    };\n    console.log(this.state.firstName);\n  }\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  signup = userInfo => {\n    return API.registerUser(userInfo).then(user => {\n      // return axios.post(\"/api/auth/register\", userInfo).then(user => {\n      console.log(\"User successfully registered\", user);\n      window.location.href = \"/\";\n    });\n  };\n\n  handleSignUp = event => {\n    event.preventDefault();\n    console.log(\"we got here\");\n\n    const newUserSignup = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      neighborhood: this.state.neighborhood,\n      residence: this.state.residence,\n      entryway: this.state.entryway,\n      password: this.state.password,\n      passwordTwo: this.state.verifypassword,\n      bio: this.state.bio,\n      skills: this.state.skills,\n      photo_url: this.state.photo_url\n    };\n    console.log(newUserSignup);\n\n    this.signup(newUserSignup).catch(err => {\n      console.log(\"jasa's app didn't sign me up:\", err);\n\n      const errors = err;\n      this.setState({ errors: errors });\n    });\n\n    // submit to backend to save might send you a token instead\n    // this should come from App.js\n    // this.props.logIn(<user obj from mongo>);\n\n    // componentWillMount () {\n    //     const { emailInput } = this.props.location.state\n    //     console.log(emailInput);\n    // }\n\n    // submit to backend to save might send you a token instead\n    // this should come from App.js\n    // this.props.logIn(<user obj from mongo>);\n\n    //send an http post request to the backend\n    //a new object that contains the values coming from the form\n\n    //path using server.js localhost path?\n    //url??:URL PATH END POINT THAT CONTAINS INCOMING POST REQUEST  /dashboard/ + newUserSignup??\n    // axios.post('http://localhost:3001/dashboard', newUserSignup)\n    //     .then(res => console.log(res.data));\n  };\n\n  render() {\n    return (\n      <div>\n        <Container>\n          {/* <form onSubmit={this.handleSignUp}> */}\n          <Form>\n            <Row>\n              <Col xs=\"6\">\n                <Label>\n                  First Name\n                  <Input\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    onChange={this.handleChange}\n                  />\n                </Label>\n              </Col>\n              <Col xs=\"6\">\n                <Label>\n                  Last Name\n                  <Input\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={this.handleChange}\n                  />\n                </Label>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xs=\"6\">\n                <Label>\n                  Email\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                </Label>\n              </Col>\n              <Col xs=\"6\">\n                <Label>\n                  Choose Your Neighborhood\n                  <Input\n                    value={this.state.neighborhood}\n                    onChange={this.handleChange}\n                    type=\"select\"\n                    name=\"neighborhood\"\n                  >\n                    <option>Fisherman&apos;s Wharf</option>\n                    <option>North Beach</option>\n                    <option>Chinatown</option>\n                    <option>Embarcadero &#47; Financial District</option>\n                    <option>SOMA &#47; Yerba Buena</option>\n                    <option>Union Square</option>\n                    <option>Central Market</option>\n                    <option>Castro &#47; Noe Valley</option>\n                    <option>Civic Center &#47; Hayes Valley</option>\n                    <option>Haight&#45;Ashbury</option>\n                    <option>Fillmore</option>\n                    <option>Japantown</option>\n                    <option>Nob Hill</option>\n                    <option>Marina &#47; Pacific Heights</option>\n                    <option>Presidio &#47; Richmond</option>\n                    <option>Sunset</option>\n                    <option>Bayview</option>\n                    <option>Treasure Island</option>\n                    <option>Mission District</option>\n                  </Input>\n                </Label>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs=\"6\">\n                <Label>\n                  Residence Type\n                  <Input\n                    value={this.state.residence}\n                    onChange={this.handleChange}\n                    type=\"select\"\n                    name=\"residence\"\n                  >\n                    <option>Entire home</option>\n                    <option>Flat</option>\n                    <option>Apartment&#47;Condo</option>\n                  </Input>\n                </Label>\n              </Col>\n              <Col xs=\"6\">\n                <Label>\n                  Entry Type\n                  <Input\n                    value={this.state.entryway}\n                    onChange={this.handleChange}\n                    type=\"select\"\n                    name=\"entryway\"\n                  >\n                    <option>Key&#47;Lockbox</option>\n                    <option>Doorman&#47;Property Manager</option>\n                    <option>Keyless&#47;Remote&#47;App</option>\n                  </Input>\n                </Label>\n                <FormText color=\"muted\">\n                  Examples of keyless entry ways include: Nest, Fingerprint,\n                  August, etc.\n                </FormText>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col xs=\"6\">\n                <Label>\n                  About me\n                  <Input\n                    type=\"textarea\"\n                    name=\"bio\"\n                    placeholder=\"Tells us about yourself.\"\n                    value={this.state.bio}\n                    onChange={this.handleChange}\n                  />\n                </Label>\n              </Col>\n              <Col xs=\"6\">\n                <Label>\n                  Skills and Credentials\n                  <Input\n                    type=\"textarea\"\n                    name=\"skills\"\n                    placeholder=\"e.g. Driver license, green thumb, pet allergies\"\n                    value={this.state.skills}\n                    onChange={this.handleChange}\n                  />\n                </Label>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Label>\n                  Photo URL\n                  <FormText color=\"muted\">\n                    Link and share a URL of your image from an image hosting and\n                    sharing service.\n                  </FormText>\n                  <Input\n                    type=\"url\"\n                    name=\"photo_url\"\n                    value={this.state.photo_url}\n                    onChange={this.handleChange}\n                  />\n                </Label>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xs=\"6\">\n                <Label>\n                  Password\n                  <Input\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                  />\n                </Label>\n              </Col>\n              <Col xs=\"6\">\n                <Label>\n                  Verify password\n                  <Input\n                    type=\"password\"\n                    name=\"verifypassword\"\n                    value={this.state.verifypassword}\n                    onChange={this.handleChange}\n                  />\n                </Label>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col sm={{ offset: 7 }}>\n                {this.state.errors && (\n                  <div>\n                    <h1>{this.state.errors.email}</h1>\n                    <br />\n                    <h1>{this.state.errors.password}</h1>\n                  </div>\n                )}\n                {/* {this.state.errors && (<div> <h1>{this.state.errors.email}</h1> <br> <h1> {this.state.errors.password} </h1>)} */}\n                <Button outline color=\"success\" onClick={this.handleSignUp}>\n                  Create my account!\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default SignUpGrid;\n\n{\n  /* <Toast className=\"signup_toast\">\n          <ToastHeader>Create your account!</ToastHeader>\n          <ToastBody>\n            <Form>\n              <FormGroup check>\n                <Row>\n                  <Col>\n                    <Label>\n                      Email\n                      <Input\n                        type=\"text\"\n                        name=\"email\"\n                        id=\"exampleEmail\"\n                        placeholder=\"johnsmith@email.com\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                      />\n                    </Label>\n                  </Col>\n                  {this.state.errors.email && (\n                    // <h1>{this.state.errors.email}</h1>\n                    <h1>{this.state.errors}</h1>\n                  )}\n                </Row>\n                <Row>\n                  <Col>\n                    <Button outline color=\"success\">\n                      {/* <Link\n                    to={{\n                      pathname: \"/signup\",\n                      state: {\n                        emailInput: props.email\n                      }\n                    }}\n                  > */\n}\n//               Submit\n//               {/* </Link> */}\n//               {/* onSubmit={props.handleSubmit} */}\n//             </Button>\n//           </Col>\n//         </Row>\n//       </FormGroup>\n//     </Form>\n//   </ToastBody>\n// </Toast>\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport NavigationBar from \"../components/Navbar/\";\nimport SignUpGrid from \"../components/SignupGrid\";\nimport auth from \"../utils/auth\";\n\nimport \"../index.css\";\n\nimport {\n  Container,\n  Col,\n  Row,\n  Label,\n  Input,\n  Button,\n  FormText\n} from \"reactstrap\";\nimport { callbackify } from \"util\";\n\n// const Signup = props => {\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    //bind the methods to \"this\"\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // check to see if there is a token (i.e. if the user has already logged in)\n    // if so, set the current user to be this user using their token\n    // (i.e. run the current user function --\n    // which will decode the user's token from localStorage or return null\n    // --> if this returns a truthy value (meaning there's a current user)\n    // --> authorize the user's requests using their token\n    var token = auth.getJwt();\n\n    if (token) {\n      console.log(\"Here are my props:\", this.props);\n      auth.setAuthHeader(token);\n      // console.log(token.exp);\n      var currentUser = auth.getCurrentUser();\n      console.log(currentUser);\n\n      // this.setState(currentUser);\n      window.location.href = \"/dashboard/:id\";\n      // this.props.history.push(\"/about\");\n    }\n  }\n\n  //event handlers and functions to handle form submission\n  // handleChange = event => {\n  //   const { name, value } = event.target;\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // };\n\n  // handleSubmit = event => {\n  //   event.preventDefault();\n  //   console.log(`Form submitted: `, this.state);\n  // };\n\n  render() {\n    return (\n      <div>\n        <NavigationBar />\n        <SignUpGrid {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport NavigationBar from '../components/Navbar';\n\nconst About = (props) => {\n    return (\n        <NavigationBar />\n    )\n}\n\nexport default About;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport auth from \"../../utils/auth\";\n\nexport default class UserNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  logOut = () => {\n    console.log(\"Bye bye user\");\n    auth.logOutUser();\n    window.location.href = \"/\";\n  };\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">Neighbor Favors</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/about\">About!</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Menu\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    <Link to=\"/requestform\">Submit a request</Link>\n                  </DropdownItem>\n                  <DropdownItem>\n                    <Link to={\"/dashboard/\" + [\"DATABASENAME.USERSID\"]}>\n                      View requests\n                    </Link>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem onClick={this.logOut}>Logout</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport {\n  FormGroup,\n  Label,  \n  Input,\n  Button,\n  Container,\n  Row,\n  Col,\n  FormText\n} from 'reactstrap';\nimport styles from './style.css'\n\nclass RequestFormInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      requestTitle: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      dust: false,\n      vaccuum: false,\n      temp: false,\n      timers: false,\n      mail: false,\n      packages: false,\n      yardwork: false,\n      trash: false,\n      moveCar: false,\n      moveMC: false,\n      moveMP: false,\n      moveOS: false,\n      playCat: false,\n      feedCat: false,\n      litter: false,\n      feedCritter: false,\n      cleanCritTank: false,\n      feedFish: false,\n      cleanFishTank: false,\n      //test in console to view if data loaded\n      loading: false\n    };\n\n    //bind methods to this\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  };\n\n  // handle change for dates\n  handleChange = event => {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value,\n    })\n  };\n\n  //handle event changes for checked items\n  handleInputChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(`Request form submitted: `, this.state);\n\n    // handle a post request for adding form to db\n    axios.\n      post(\"/api/requests\", this.state)\n      .then(res => console.log('data from server', res.data));\n  };\n\n  render() {\n    return (\n      <div className='form-holder'>\n        <Container>\n          <Row>\n            <div className='header-holder'>\n              <p className='header'>Submit A Request</p>\n              <p className='header-sub'>Tell us what you need and let us find you a neighbor!</p>\n            </div>\n          </Row>\n          <br />\n\n\n          <form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col xs=\"6\" sm=\"4\">\n                <Label>Create a request request\n                    <Input\n                    type=\"text\"\n                    name=\"requestTitle\"\n                    placeholder=\"Request Title\"\n                    value={this.state.requestTitle}\n                    onChange={this.handleChange}\n                  ></Input>\n                </Label>\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              <Col xs=\"6\" sm=\"4\">\n                <FormGroup>\n                  <Label>Start Date\n          <Input\n                      type=\"date\"\n                      name=\"startDate\"\n                      id=\"startDate\"\n                      placeholder=\"date placeholder\"\n                      value={this.state.startDate}\n                      onChange={this.handleChange}\n                    />\n                  </Label>\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs=\"6\" sm=\"4\">\n                <FormGroup>\n                  <Label>End Date\n          <Input\n                      type=\"date\"\n                      name=\"endDate\"\n                      id=\"endDate\"\n                      placeholder=\"date placeholder\"\n                      value={this.state.endDate}\n                      onChange={this.handleChange}\n                    />\n                  </Label>\n                </FormGroup>\n              </Col>\n            </Row>\n            <div className='checked-tasks'>\n\n            \n            <Row>Indoor tasks</Row>\n            <Row>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"dust\"\n                      type=\"checkbox\"\n                      id=\"dust\"\n                      checked={this.state.dust}\n                      onChange={this.handleInputChange} />\n                    Dust\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"vaccuum\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.vaccuum}\n                      onChange={this.handleInputChange} />\n                    Vaccuum\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"temp\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.temp}\n                      onChange={this.handleInputChange} />\n                    Adjust thermostat\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"timers\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.timers}\n                      onChange={this.handleInputChange} />\n                    Check timers\n              </Label>\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <br />\n\n\n            <Row>Outdoor tasks</Row>\n            <Row>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"mail\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.mail}\n                      onChange={this.handleInputChange} />\n                    Check the mail &#47; Bring in newspapers\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"packages\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.packages}\n                      onChange={this.handleInputChange} />\n                    Sign for packages\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"yardwork\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.yardwork}\n                      onChange={this.handleInputChange} />\n                    Yardwork\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"trash\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.trash}\n                      onChange={this.handleInputChange} />\n                    Take out trash, compost, recycling\n              </Label>\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <br />\n\n\n            <Row><FormText color=\"muted\">Avoid street-cleaning &#47; 72&#130;hour time enforcement tickets.\n          <br />Appropriate license required!</FormText></Row>\n            <Row>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"moveCar\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.moveCar}\n                      onChange={this.handleInputChange} />\n                    Move car\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"moveMC\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.moveMC}\n                      onChange={this.handleInputChange} />\n                    Move motorcycle\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"moveMP\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.moveMP}\n                      onChange={this.handleInputChange} />\n                    Move mo-ped\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"moveOS\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.moveOS}\n                      onChange={this.handleInputChange} />\n                    Move large vehicle\n                <Row><FormText color=\"muted\">such as RV or camper</FormText></Row>\n                  </Label>\n                </FormGroup>\n              </Col>\n            </Row>\n\n\n\n            <Row>Pet chores </Row>\n            <Row><FormText color=\"muted\">Because our canine companions require a little more attention and care, Neighbor Favor\n          cannot be responsible for the care of dogs and reccomends seeking other services for your furry friend.</FormText></Row>\n            <Row>\n              <Col xs=\"6\" sm=\"4\">\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"playCat\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.playCat}\n                      onChange={this.handleInputChange} />\n                    Play with cat\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col xs=\"6\" sm=\"4\">\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"feedCat\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.feedCat}\n                      onChange={this.handleInputChange} />\n                    Feed cat and change water bowl\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col xs=\"6\" sm=\"4\">\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"litter\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.litter}\n                      onChange={this.handleInputChange} />\n                    Change litter box\n              </Label>\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"feedCritter\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.feedCritter}\n                      onChange={this.handleInputChange} />\n                    Feed reptiles/rodents\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"cleanCritTank\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.cleanCritTank}\n                      onChange={this.handleInputChange} />\n                    Clean tank\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"feedFish\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.feedFish}\n                      onChange={this.handleInputChange} />\n                    Feed Fish\n              </Label>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      name=\"cleanFishTank\"\n                      type=\"checkbox\"\n                      id=\"checkbox2\"\n                      checked={this.state.cleanFishTank}\n                      onChange={this.handleInputChange} />\n                    Clean fish tank\n              </Label>\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <br />\n\n\n            <Button>Submit request!</Button>\n</div>\n          </form>\n        </Container>\n        \n      </div>\n\n    )\n  }\n}\n\nexport default RequestFormInput;\n\n\n\n\n// POSTMAN BODY JSON\n// {\n//   \"cleanCritTank\": false,\n//   \"cleanFishTank\": false,\n//   \"dust\": false,\n//   \"endDate\": \"\",\n//   \"feedCat\": false,\n//   \"feedCritter\": false,\n//   \"feedFish\": false,\n//   \"litter\": false,\n//   \"loading\": false,\n//   \"mail\": false,\n//   \"moveCar\": false,\n//   \"moveMC\": false,\n//   \"moveMP\": false,\n//   \"moveOS\": false,\n//   \"packages\": false,\n//   \"playCat\": false,\n//   \"requestTitle\": \"LA Day trip\"\n//   \"startDate\": \"2019-08-20\"\n//   \"temp\": false,\n//   \"timers\": false,\n//   \"trash\": false,\n//   \"vaccuum\": true,\n//   \"yardwork\": false\n//   }\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserNavBar from \"../components/UserNavBar\";\nimport RequestFormInput from \"../components/RequestFormInput\";\nimport axios from \"axios\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      requestTitle: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      dust: false,\n      vaccuum: false,\n      temp: false,\n      timers: false,\n      mail: false,\n      packages: false,\n      yardwork: false,\n      trash: false,\n      moveCar: false,\n      moveMC: false,\n      moveMP: false,\n      moveOS: false,\n      playCat: false,\n      feedCat: false,\n      litter: false,\n      feedCritter: false,\n      cleanCritTank: false,\n      feedFish: false,\n      cleanFishTank: false,\n      //test in console to view if data loaded\n      loading: false\n    };\n\n    //bind methods to this\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  // handle change for dates\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  //handle event changes for checked items\n  handleInputChange = event => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(`Request form submitted: `, this.state);\n\n    //handle a post request for adding form to db\n    axios.post(\"/api/requests\", this.state).then(res => console.log(res.data));\n  };\n\n  render() {\n    return (\n      <div>\n        <UserNavBar />\n        <RequestFormInput />\n      </div>\n    );\n  }\n}\n\nexport default Form;\n\n// This is the form the resident will use to fill out their needs\n// all the other components you want to import will go into here\n// Example: import { Input, TextArea, Form Btn } from \"..components/Form\"\n// In which case, we'd have to create those components in the component folder\n\n// TO-DO: Figure out what class we'd want to put\n// class __ extends __ {\n\n// We will probably use states here\n\n// }\n\n// render() {\n// return (\n// render reactstrap elements here for the interest form page\n// )\n// }\n\n// ---------- EXPORTING ----------\n// export default Form;\n","import React from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter\n} from 'reactstrap';\n\nclass OpenRequestsModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false,\n            requests: []\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    render() {\n        const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>;\n        var btnStyles = {\n            \"backgroundColor\": \"#4ABDAC\",\n            \"borderRadius\": \"5px\",\n            \"height\": \"100px\"\n        };\n\n        return (\n            // if there are no openRequests RequestResults, use the noRequests span. If there are use the modal.\n            <div>\n                <button style={btnStyles} onClick={this.toggle}>{this.props.buttonLabel} {this.state.requestTitle} {this.state.startDate} to {this.state.endDate}</button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle} close={closeBtn}>{this.props.request.title}</ModalHeader>\n                    <ModalBody>\n                        {this.props.request}\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle}>Update</Button>{' '}\n                        <Button color=\"danger\" onClick={this.toggle}>Delete</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>Close</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default OpenRequestsModal;","import React, { Component } from \"react\";\n// import the props from Signup '../pages/Signup';\nimport {\n  Container,\n  Col,\n  Row,\n  Jumbotron,\n  FormGroup,\n  Label,\n  CustomInput,\n  Badge\n} from \"reactstrap\";\nimport UserNavBar from \"../components/UserNavBar\";\nimport OpenRequestsModal from \"../components/OpenRequestsModal\";\nimport API from \"../utils/API\";\nimport axios from \"axios\";\nimport auth from \"../utils/auth\";\n\nvar styles = {\n  backgroundImage: 'url(\"https://i.ibb.co/5jbtrZN/IMG-7398.jpg\")',\n  backgroundSize: \"cover\",\n  color: \"#FFFFFF\",\n  textAlign: \"right\",\n  fontFamily:\n    \"'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\"\n};\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requests: [],\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    // axios.get(\"/\").then(res => console.log(res.data));\n\n    var token = auth.getJwt();\n\n    if (!token) {\n      console.log(\"User not logged in\");\n      window.location.href = \"/\";\n    } else if (token) {\n      // console.log(\"Here are my props:\", this.props);\n      auth.setAuthHeader(token);\n      // console.log(token.exp);\n      var currentUser = auth.getCurrentUser();\n      console.log(\"the current user is\", currentUser);\n\n      this.setState({ user: this.currentUser });\n      // console.log(this.state);\n    } else if (currentUser.exp < Date.now() / 1000 || token === null) {\n      auth.logOutUser();\n    } else {\n      console.log(\"User is not logged in\");\n    }\n\n    // window.location.href = \"/dashboard/:id\";\n    // this.props.history.push(\"/about\");\n  }\n\n  // componentDidMount(){\n  //   // axios.get('/api/requests/' + passportuserID).then((result) => {\n  //   //   this.setState(result);\n  //   // })\n  //   this.setState({ requests: [\n  //       {\n  //         ...response, array of req objects\n  //       }\n  //     ]\n  //   })\n  // }\n  render() {\n    var headerStyles = {\n      fontFamily:\n        \"'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\",\n      fontSize: \"18px\"\n    };\n\n    // //LOAD USERS from utils/API\n    // loadUser = () => {\n    //   API.getUser()\n    //   .then(res => this.setState({ users: res.data }))\n    //   .catch(err => console.log(err));\n    // }\n    // //LOAD REQUESTS from utils/API\n    // loadUserRequests = () => {\n    //   API.getRequest()\n    //   .then(res => this.setState({ requests: res.data }))\n    //   .catch(err => console.log(err));\n    // }\n\n    //Mount users and requests\n    // componentDidMount() {\n    //   this.loadUser();\n    //   this.loadUserRequests();\n    // }\n\n    return (\n      <div>\n        <UserNavBar />\n        <Jumbotron fluid style={styles}>\n          <Container fluid>\n            <h1 className=\"display-3\">Welcome, Neighbor!</h1>\n            {/* <h1 className=\"display-3\">Welcome, {this.state.user.firstName}</h1> */}\n            <p className=\"lead\">\n              Here you can view open requests and change your availability.\n            </p>\n          </Container>\n        </Jumbotron>\n        <Container>\n          <Row>\n            <Col\n              xs=\"6\"\n              sm=\"4\"\n              style={{ backgroundColor: \"#DCC7AA\", borderRadius: \"5px\" }}\n            >\n              <FormGroup>\n                <Label for=\"exampleCheckbox\" style={headerStyles}>\n                  Neighborly Availability\n                </Label>\n                <div>\n                  <p>\n                    Let your neighbors know you're available for favors by\n                    turning the switch below on.\n                  </p>\n                  <CustomInput\n                    type=\"switch\"\n                    id=\"exampleCustomSwitch\"\n                    name=\"customSwitch\"\n                    label=\"Be a good neighbor\"\n                  />\n                </div>\n              </FormGroup>\n            </Col>\n            <Col xs=\"auto\">\n              <Label style={headerStyles}>Open Requests</Label>\n              {/* map through requests */}\n              {this.state.requests.length === 0 && (\n                <p>There are no open requests.</p>\n              )}\n              {this.state.requests.length > 0 &&\n                this.state.requests.map(request => (\n                  <OpenRequestsModal request={request} />\n                ))}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Container,\n  Media,\n  Col,\n  Row,\n  Button\n} from 'reactstrap';\nimport axios from 'axios';\n\nexport default class RequestResults extends React.Component {\n  constructor(props) {\n    super(props)\n    // empty requests array\n     this.state = {\n       userRequests: []\n    }\n  }\n\n  //handle axios request\n  // componentDidMount() {\n  //   //axios request to BE for requests\n  //   axios.get('/api/requests/' + )\n  //   //set userRequests state with array of data\n  // };\n\n  render() {\n    return (\n      <Container>\n        <Media>\n          <Col xs=\"3\">\n            <Media left href=\"#\">\n              <Media object data-src=\"holder.js/64x64\" alt=\"user photo_url\" />\n            </Media>\n          </Col>\n          <Col xs=\"6\">\n            <Media body>\n              <Media heading>\n                This will hold the first name of a response\n        </Media>\n              <Row>\n                This will hold their bio\n        </Row>\n              <Row>\n                This will hold their skills\n        </Row>\n            </Media>\n          </Col>\n          <Col xs=\"3\">\n            <Button size=\"sm\">Request me!</Button>\n          </Col>\n        </Media>\n      </Container>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport UserNavBar from \"../components/UserNavBar\";\nimport RequestResults from \"../components/RequestResults\";\n\nconst Results = (props) => {\n    return (\n        <div>\n            <UserNavBar />\n            <RequestResults />\n        </div>\n    )\n}\n\nexport default Results;","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport auth from \"../../utils/auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      // var test = auth.getJwt();\n      // console.log(auth.getJwt())\n      auth.getJwt() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;\n\n// const PrivateRoute = ({ component: Component, ...rest }) => (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         auth.getToken() !== null ? (\n//           <Component {...props} />\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: \"/signup\",\n//               state: { from: props.location }\n//             }}\n//           />\n//         )\n//       }\n//     />\n// );\n","import React from \"react\";\n\nimport {\n  Container,\n  Col,\n  Row,\n  Jumbotron,\n  FormGroup,\n  Label,\n  CustomInput,\n  Badge\n} from \"reactstrap\";\nimport UserNavBar from \"../components/UserNavBar\";\n\nconst NoMatch = props => {\n  return (\n    <div>\n      <UserNavBar />\n      <Jumbotron />\n      <br />\n      {/* <Grid login={props.login} /> */}\n      {/* <Grid /> */}\n      <h2>Sorry to do this but...</h2>\n      <h1>404 Page Not Found</h1>\n      <h1>\n        <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n          🙄\n        </span>\n      </h1>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { Component } from \"react\";\nimport API from \"./utils/API\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport Login from \"../src/pages/Login\";\nimport Signup from \"../src/pages/Signup\";\nimport About from \"../src/pages/About\";\nimport Form from \"../src/pages/RequestForm\";\nimport Dashboard from \"../src/pages/Dashboard\";\nimport Results from \"../src/pages/Results\";\n\nimport PrivateRoute from \"../src/components/PrivateRoute\";\nimport NoMatch from \"../src/pages/NoMatch\";\nimport auth from \"./utils/auth\";\n\nimport jwtDecode from \"jwt-decode\";\n\n// THIS IS NOW IN ITS OWN SEPARATE COMPONENT\n// const PrivateRoute = ({ component: Component, ...rest }) => (\n//   <Route\n//     {...rest}\n//     render={props =>\n//       auth.getToken() !== null ? (\n//         <Component {...props} />\n//       ) : (\n//         <Redirect\n//           to={{\n//             pathname: \"/signup\",\n//             state: { from: props.location }\n//           }}\n//         />\n//       )\n//     }\n//   />\n// );\n\nclass App extends Component {\n  constructor() {\n    super();\n    // state to be used for app set here\n    // user of course for user data\n    // redirectToReferrer is a boolean\n    // wh/ should be set to \"True\" when the user is known/logged in\n    // if it's true, we can redirect the user to other places\n    this.state = {\n      user: null\n      // redirectToReferrer: false\n    };\n  }\n\n  componentDidMount() {\n    // check to see if there is a token (i.e. if the user has already logged in)\n    // if so, set the current user to be this user using their token\n    // (i.e. run the current user function --\n    // which will decode the user's token from localStorage or return null\n    // --> if this returns a truthy value (meaning there's a current user)\n    // --> authorize the user's requests using their token\n    var token = auth.getJwt();\n\n    if (token) {\n      auth.setAuthHeader(token);\n      // console.log(token.exp);\n      var currentUser = auth.getCurrentUser();\n      console.log(currentUser);\n\n      if (currentUser.exp < Date.now() / 1000) {\n        auth.logOutUser();\n        window.location.href = \"/\";\n        // more logic here for currentUser?\n      }\n      this.setState(currentUser);\n    } else {\n      console.log(\"User is not logged in\");\n    }\n\n    // let userLogin = await API.get('/login??', {\n    //   params: {\n    //     email: ??,\n    //     password: ??,\n    //   }\n    // })\n\n    //   async componentDidMount() {\n    //     axios.get('/api/users')\n    //   }\n\n    //    //testing\n    // state = {\n    //   // import user info from db\n    //   user: []\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {/* element from react-router-dom that requires two parameters\n          path with the URL extension AND with the exact attribute of the component */}\n\n          <Switch>\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/signup\" exact component={Signup} />\n            <PrivateRoute path=\"/requestform\" exact component={Form} />\n            {/* testing environments for dashboard and results routes */}\n            {/* pass a default id parameter in the URL to view testing environment */}\n            <PrivateRoute path=\"/dashboard/:id\" exact component={Dashboard} />\n            <PrivateRoute path=\"/results/:id\" exact component={Results} />\n            <Route path=\"/\" render={props => <Login {...this.props} />} />\n            {/* catch all page - when they try to navigate to a nonexistent page via a nonexistent route */}\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n\n      // <Router>\n      //   {/* element from react-router-dom that requires two parameters\n      //   path with the URL extension AND with the exact attribute of the component */}\n      //   {/* <Route path=\"/\" exact component={Login} /> */}\n      //   <Route path=\"/\" exact render={(props) => <Login {...props} user={this.state.user} />} />\n      //   <Route path=\"/about\" exact component={About} />\n      //   <Route path=\"/signup\" exact component={Signup} />\n      //   <Route path=\"/requestform\" exact component={Form} />\n      //   {/* testing environments for dashboard and results routes */}\n      //   {/* pass a default id parameter in the URL to view testing environment */}\n      //   <Route path=\"/dashboard\" exact render={(props) => <Dashboard {...props} user={this.state.user} />} />\n      //   {/* <Route path=\"/dashboard/:id\" exact component={Dashboard} /> */}\n      //   <Route path=\"/results/:id\" exact component={Results} />\n      // </Router>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}